generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email      String      @id
  name       String
  currency   String      @default("United States - USD")
  subscribed Boolean     @default(false)
  portfolios Portfolio[]
  supports   Support[]
  feedbacks  Feedback[]
}

model Portfolio {
  id            String        @id @default(uuid())
  createdDate   DateTime      @default(now())
  updatedDate   DateTime      @updatedAt
  portfolioName String
  transactions  Transaction[]
  ownerEmail    String
  owner         User          @relation(fields: [ownerEmail], references: [email])

  @@unique([ownerEmail, portfolioName])
}

model Transaction {
  id              String          @id @default(uuid())
  createdDate     DateTime        @default(now())
  updatedDate     DateTime        @updatedAt
  transactionName String
  type            TransactionType
  amount          Int
  transactionDate DateTime
  comments        String?
  portfolioId     String
  portfolio       Portfolio       @relation(fields: [portfolioId], references: [id])

  @@unique([transactionName, type, transactionDate, amount, portfolioId])
}

model Support {
  id          String        @id @default(uuid())
  createdDate DateTime      @default(now())
  reason      SupportReason
  concern     String
  resolved    Boolean       @default(false)
  ownerEmail  String
  owner       User          @relation(fields: [ownerEmail], references: [email])

  @@unique([ownerEmail, concern, reason])
}

model Feedback {
  id          String   @id @default(uuid())
  createdDate DateTime @default(now())
  rating      Int
  comments    String?
  ownerEmail  String
  owner       User     @relation(fields: [ownerEmail], references: [email])

  @@unique([ownerEmail, rating, comments])
}

model Ref {
  id      String     @id
  visited DateTime[] @default([])
}

enum TransactionType {
  DR
  CR
}

enum SupportReason {
  GI
  FR
  TS
  IS
}
